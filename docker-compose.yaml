volumes:
  pgdata:
  rabbitmq_data:

networks:
  kong-net:
    driver: bridge
    name: kong-net

version: "3.8"

services:
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:15 # tested 20231101; Ref: https://docs.konghq.com/gateway/latest/support/third-party/
    platform: linux/amd64 # <- required for Mac M1 chip. Otherwise, can remove
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      # - "5433:5432"
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong/kong-gateway:3.2.2.5
    platform: linux/amd64 # <- required for Mac M1 chip.
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong/kong-gateway:3.2.2.5
    platform: linux/amd64 # <- required for Mac M1 chip.
    restart: always
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    depends_on:
      - kong-migration
    ports: # https://docs.konghq.com/gateway/latest/production/networking/default-ports/
      - "8000:8000" # Takes incoming HTTP traffic from Consumers, and forwards it to upstream Services.
      - "8443:8443" # Takes incoming HTTPS traffic from Consumers, and forwards it to upstream Services.
      - "8001:8001" # Admin API. Listens for calls from the command line over HTTP.
      - "8444:8444" # Admin API. Listens for calls from the command line over HTTPS.
      - "8002:8002" # Kong Manager (GUI). Listens for HTTP traffic.
      - "8445:8445" # Kong Manager (GUI). Listens for HTTPS traffic.
      - "8003:8003" # Dev Portal. Listens for HTTP traffic, assuming Dev Portal is enabled.
      - "8446:8446" # Dev Portal. Listens for HTTP traffic, assuming Dev Portal is enabled.
      - "8004:8004" # Dev Portal /files traffic over HTTPS, assuming the Dev Portal is enabled.
      - "8447:8447" # Dev Portal /files traffic over HTTPS, assuming the Dev Portal is enabled.

  # ###########################
  # ### Simple Auth Service ###
  # ###########################
  # auth_service:
  #   build: ./auth_service
  #   container_name: auth_service
  #   restart: always
  #   ports:
  #     - 3001:3001
  #   environment:
  #     - CLIENT_PORT=${CLIENT_PORT}
  #     - SERVER_PORT=${SERVER_PORT}
  #     - API_VERSION=${API_VERSION}
  #     - REDIRECT_URL=${REDIRECT_URL}
  #     - SGID_CLIENT_ID=${SGID_CLIENT_ID}
  #     - SGID_CLIENT_SECRET=${SGID_CLIENT_SECRET}
  #     - SGID_PRIVATE_KEY=${SGID_PRIVATE_KEY}
  #     - TYPE=${TYPE}
  #     - HOST=${HOST}
  #     - DB_PORT=${DB_PORT}
  #     - USERNAME=${USERNAME}
  #     - PASSWORD=${PASSWORD}
  #     - DATABASE=${DATABASE}
  #     - DOMAIN=${DOMAIN}
  #   depends_on:
  #     - postgres_db

  ##############################
  ### Simple Booking Service ###
  ##############################
  booking_service:
    build: ./booking_service
    container_name: booking_service
    restart: always
    ports:
      - 5001:5001
    environment:
      - DATABASE_URI=${BOOKING_SERVICE_DATABASE_URI}
      - PYTHONUNBUFFERED=1
    # depends_on:
    #   - auth_service
    #   - booking_db

  # ##############################
  # ### Simple Concert Service ###
  # ##############################
  concert_service:
    build: ./concert_service
    container_name: concert_service
    restart: always
    ports:
      - 5002:5002
    environment:
      - DATABASE_URI=${CONCERT_SERVICE_DATABASE_URI}
      - STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - PYTHONUNBUFFERED=1
    # depends_on:
    #   - auth_service
    #   - concert_db

  ##############################
  ### Simple Payment Service ###
  ##############################
  payment_service:
    build: ./payment_service
    container_name: payment_service
    restart: always
    ports:
      - 5006:5006
    environment:
      - DATABASE_URI=${PAYMENT_SERVICE_DATABASE_URI}
      - STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - PYTHONUNBUFFERED=1
    # depends_on:
    #   - auth_service

  ####################################
  #### Simple Notification Service ###
  ####################################
  notification_service:
    build: ./notification_service
    container_name: notification_service
    restart: always
    ports:
      - 5003:5003
    environment:
      - MAILTRAP_API_KEY=${MAILTRAP_API_KEY}
      # rabbitMQ: "amqp://rabbitmq:5672"
      - PYTHONUNBUFFERED=1
    depends_on:
      - rabbitmq
      # - auth_service

  #############################
  #### Simple Forum Service ###
  #############################
  forum_service:
    build: ./forum_service
    container_name: forum_service
    restart: always
    ports:
      - 5007:5007
    environment:
      - DATABASE_URI=${FORUM_SERVICE_DATABASE_URI}
      - PYTHONUNBUFFERED=1
    #depends_on:
    # - auth_service
    # - forum_db

  ################
  ### RabbitMQ ###
  ################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq.config:/etc/rabbitmq/rabbitmq.config
      - ./rabbitmq_definitions.json:/etc/rabbitmq/rabbitmq_definitions.json
      - rabbitmq_data:/var/lib/rabbitmq

  ###################################
  ### Simple Activity Log Service ###
  ###################################
  activity_log:
    build:
      context: ./activity_log_service
      dockerfile: activity_log.Dockerfile
    container_name: activity_log_service
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      a_queue_name: Activity_Log
      PYTHONUNBUFFERED: 1

  ############################
  ### Simple Error Service ###
  ############################
  error:
    build:
      context: ./error_service
      dockerfile: error.Dockerfile
    container_name: error_service
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      e_queue_name: Error
      PYTHONUNBUFFERED: 1

  #####################################
  #### Book Concert Complex Service ###
  #####################################
  book_concert_microservice:
    build: ./book_concert_microservice
    container_name: book_concert_microservice
    ports:
      - 5100:5100
    environment:
      - EXCHANGE_NAME=${EXCHANGE_NAME_BOOK_CONCERT}
      - EXCHANGE_TYPE=${EXCHANGE_TYPE_BOOK_CONCERT}
      - PYTHONUNBUFFERED=1
      - rabbit_host=rabbitmq
      - rabbit_port=5672
    depends_on:
      - rabbitmq
      # - auth_service
      - booking_service
      - concert_service
      - notification_service
      - activity_log
      - error

  #######################################
  #### Cancel Booking Complex Service ###
  #######################################
  cancel_booking_microservice:
    build: ./cancel_booking_microservice
    container_name: cancel_booking_microservice
    restart: always
    ports:
      - 5200:5200
    environment:
      - EXCHANGE_NAME=${EXCHANGE_NAME_CANCEL_BOOKING}
      - EXCHANGE_TYPE=${EXCHANGE_TYPE_CANCEL_BOOKING}
      - PYTHONUNBUFFERED=1
      - rabbit_host=rabbitmq
      - rabbit_port=5672
    depends_on:
      - rabbitmq
      #- auth_service
      - concert_service
      - booking_service
      - payment_service
      - notification_service
      - activity_log
      - error

  ##############################
  #### Forum Complex Service ###
  ##############################
  get_forum_microservice:
    build: ./forum_complex_microservice
    container_name: forum_complex_microservice
    restart: always
    ports:
      - 5300:5300
    environment:
      - EXCHANGE_NAME=${EXCHANGE_NAME_FORUM}
      - EXCHANGE_TYPE=${EXCHANGE_TYPE_FORUM}
      - PYTHONUNBUFFERED=1
      - rabbit_host=rabbitmq
      - rabbit_port=5672
    depends_on:
      - rabbitmq
      #- auth_service
      - forum_service
      - booking_service
      - activity_log
      - error

  # #########################
  # ### Postgres Database ###
  # #########################
  # postgres_db:
  #   image: postgres:latest
  #   restart: always
  #   ports:
  #     - 5432:5432
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${POSTGRES_DB}

  # #########################
  # ### Concert Database ###
  # #########################
  # concert_db:
  #   image: mysql:latest
  #   restart: always
  #   ports:
  #     - 3306:3306
  #   # environment:
  #   #   - MYSQL_ROOT_PASSWORD: your_password
  #   #   - MYSQL_DATABASE: database_name
  #   #   - MYSQL_USER: user_name
  #   #   - MYSQL_PASSWORD: user_password

  # #########################
  # ### Booking Database ###
  # #########################
  # booking_db:
  #   image: mysql:latest
  #   restart: always
  #   ports:
  #     - 3307:3306
  #   # environment:
  #   #   - MYSQL_ROOT_PASSWORD: your_password
  #   #   - MYSQL_DATABASE: database_name
  #   #   - MYSQL_USER: user_name
  #   #   - MYSQL_PASSWORD: user_password

  # #########################
  # ### Forum Database ###
  # #########################
  # forum_db:
  #   image: mysql:latest
  #   restart: always
  #   ports:
  #     - 3308:3306
  #   # environment:
  #   #   - MYSQL_ROOT_PASSWORD: your_password
  #   #   - MYSQL_DATABASE: database_name
  #   #   - MYSQL_USER: user_name
  #   #   - MYSQL_PASSWORD: user_password
