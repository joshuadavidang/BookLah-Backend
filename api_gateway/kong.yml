_format_version: "2.1"
_transform: true

services:
  ##### AUTH MICROSERVICE #####
  - name: auth_service
    url: http://host.docker.internal:3001/
    routes:
      - name: auth_service_route
        paths:
          - /auth

  ##### CONCERT MICROSERVICE #####
  - name: concert_service
    url: http://host.docker.internal:5002/
    routes:
      - name: concert_service_route
        paths:
          - /concert

  ##### PAYMENT MICROSERVICE #####
  - name: payment_service
    url: http://host.docker.internal:5006/
    routes:
      - name: payment_service_route
        paths:
          - /payment

  ##### FORUM MICROSERVICE #####
  - name: forum_service
    url: http://host.docker.internal:5007/
    routes:
      - name: forum_service_route
        paths:
          - /forum

  ##### BOOKING MICROSERVICE #####
  - name: booking_service
    url: http://host.docker.internal:5001/
    routes:
      - name: booking_service_route
        paths:
          - /booking

  ##### COMPLEX MICROSERVICES #####
  - name: book_concert
    url: http://host.docker.internal:5100/
    routes:
      - name: book_concert_route
        paths:
          - /booking
        methods:
          - POST

  - name: cancel_booking
    url: http://host.docker.internal:5200/
    routes:
      - name: cancel_booking_route
        paths:
          - /cancel
        methods:
          - POST

  - name: forum_complex
    url: http://host.docker.internal:5300/
    routes:
      - name: get_forum_route
        paths:
          - /forum
        methods:
          - POST

  - name: create_concert
    url: http://host.docker.internal:5400/
    routes:
      - name: create_concert_route
        paths:
          - /concert
        methods:
          - POST

#Key Auth plugin Added -------------
consumers:
  - username: admin
    custom_id: custom_id123

keyauth_credentials:
  - consumer: admin
    ttl: 5000
    key: admin

# ACL Plugin Added -------------
acls:
- consumer: admin
 group: group1
 tags: { tag1 }


  #### [!] TODO: Commented out for development purpose, to be enabled in production ####
  # - name: proxy-cache
  #   config:
  #     response_code:
  #       - 200
  #     request_method:
  #       - GET
  #     content_type:
  #       - text/plain
  #       - application/json
  #     cache_ttl: 300
  #     strategy: memory
plugins:
  - name: cors
    config:
      origins:
        - "*"
      methods:
        - GET
        - POST
        - PUT
        - DELETE
      headers:
        - Accept
        - Accept-Version
        - Content-Length
        - Content-MD5
        - Content-Type
        - Date
        - X-Auth-Token
      exposed_headers:
        - X-Auth-Token
      credentials: true
      max_age: 3600

#Key-Auth plugin
  - name: key-auth
    config:
      key_names:
        - apikey

# ACL plugin
  - name: acl
    config:
      allow:
        - group1
      hide_groups_header: true

# Bot-detection plugin which will deny request who have chrome value in their user agent header
- name: bot-detection
  config:
    deny:
      - "(C|c)hrome"
